Q1: 5x5 Matrix
 [[ 1  2  3  4  5]
 [ 6  7  8  9 10]
 [11 12 13 14 15]
 [16 17 18 19 20]
 [21 22 23 24 25]]

Q2: 4x4 Identity Matrix
 [[1. 0. 0. 0.]
 [0. 1. 0. 0.]
 [0. 0. 1. 0.]
 [0. 0. 0. 1.]]

Q3: Array from 100 to 200 step 10
 [100 110 120 130 140 150 160 170 180 190 200]

Q4: Random 3x3 Matrix
 [[0.63072134 0.12779283 0.22479949]
 [0.9578045  0.38652207 0.37812941]
 [0.29014658 0.39902841 0.74950581]]
Determinant: 0.07054048351127587

Q5: 10 Random Integers
 [97 27  8 74 97 85 58 26 59 58]

Q6: Reshaped Array
 [[ 1  2  3  4]
 [ 5  6  7  8]
 [ 9 10 11 12]]

Q7: A
 [[4 3 9]
 [7 6 3]
 [6 5 2]]
B
 [[1 7 9]
 [1 4 5]
 [3 2 5]]
A*B
 [[ 34  58  96]
 [ 22  79 108]
 [ 17  66  89]]

Q8: Eigenvalues: [5. 2.]
Eigenvectors:
 [[ 0.89442719 -0.70710678]
 [ 0.4472136   0.70710678]]

Q9: Diagonal elements
 [0.77210551 0.72802542 0.88991062 0.55936673 0.4296073 ]

Q10: Normalized array
 [0.   0.25 0.5  0.75 1.  ]

Q11: Original
 [[29 22 41  2]
 [44 41 23 19]
 [26 29 25 12]
 [36 33 12  6]]
Row-wise sort
 [[ 2 22 29 41]
 [19 23 41 44]
 [12 25 26 29]
 [ 6 12 33 36]]
Column-wise sort
 [[26 22 12  2]
 [29 29 23  6]
 [36 33 25 12]
 [44 41 41 19]]

Q12: Array
 [ 1 94 64 61 39  5 45 33 92 61]
Max index: 1 Min index: 0

Q13: ravel: [1 2 3 4]  flatten: [1 2 3 4]

Q14: Inverse
 [[ 2.  -2.5 -0.5]
 [ 0.   1.   0. ]
 [-1.   0.5  0.5]]

Q15: Permutation
 [10  4  5  3  7  9  2  6  8  1]

Q16: Replace evens with -1
 [-1  1 -1  3 -1  5 -1  7 -1  9 -1 11 -1 13 -1 15 -1 17 -1 19 -1]

Q17: Dot product: 32

Q18: Trace: 2.3672647897400156

Q19: Split array: [array([0, 1, 2]), array([3, 4, 5]), array([6, 7, 8])]

Q20: Mean across axis=0
 [[0.64285045 0.51448613 0.58668376]
 [0.49735727 0.12394627 0.71065319]
 [0.45977654 0.87974305 0.69066936]]

Q21: Cumulative sum: [ 1  3  6 10]

Q22: Upper triangular
 [[5 4 7 5]
 [0 6 5 5]
 [0 0 4 4]
 [0 0 0 5]]

Q23: Checkerboard pattern
 [[0 1 0 1 0 1]
 [1 0 1 0 1 0]
 [0 1 0 1 0 1]
 [1 0 1 0 1 0]
 [0 1 0 1 0 1]
 [1 0 1 0 1 0]]

Q24: Square root
 [[2.8866243  2.87206259 2.23003887]
 [1.04631709 2.02410706 1.6063147 ]
 [0.94705993 0.77100067 2.69582745]]

Q25: Reversed array
 [19 18 17 16 15 14 13 12 11 10  9  8  7  6  5  4  3  2  1  0]

Q26: Vertical
 [[1 2]
 [3 4]
 [5 6]
 [7 8]]
Horizontal
 [[1 2 5 6]
 [3 4 7 8]]

Q27: Row sum [ 6 15]
Column sum [5 7 9]

Q28: Replace NaN
 [[1. 5. 3.]
 [4. 5. 3.]]

Q29: Cosine similarity: 0.9746318461970762

Q30: Rotated
 [[ 3  7 11 15]
 [ 2  6 10 14]
 [ 1  5  9 13]
 [ 0  4  8 12]]

Q31: Structured array
 [('Alice', 21, 88.5) ('Bob', 22, 92. )]

Q32: Rank: 3

Q33: Normalized rows
 [[0.42498783 0.38142812 0.4396063  0.53787195 0.43742199]
 [0.6671115  0.15926912 0.4289739  0.48290267 0.33523424]
 [0.32456123 0.6861332  0.42096856 0.46782333 0.16675741]
 [0.34737341 0.52095174 0.03510662 0.6133658  0.48009471]
 [0.1155831  0.57068001 0.520991   0.17299537 0.59967146]]

Q34: Arrays equal? True

Q35: Histogram
 [ 26  54 116 184 232 188 112  56  26   6]
Bins
 [-2.45381966 -1.91169537 -1.36957107 -0.82744678 -0.28532248  0.25680182
  0.79892611  1.34105041  1.88317471  2.425299    2.9674233 ]

Q36: Broadcasting
 [[2. 3. 4.]
 [2. 3. 4.]
 [2. 3. 4.]]

Q37: Unique
 [1 2 3 4] Counts
 [1 2 1 3]

Q38: Pearson correlation: 0.9999999999999999

Q39: Gradient
 [1.  1.5 2.5 3.5 4. ]

Q40: U
 [[-0.64943822  0.23971287 -0.72164239]
 [-0.47495729 -0.86899785  0.13877434]
 [-0.59383969  0.43287467  0.67821379]]
S
 [1.9246202  0.73360818 0.21850135]
Vt
 [[-0.3274142  -0.65237972 -0.68352077]
 [-0.93402774  0.11413459  0.33847524]
 [ 0.14280102 -0.74924895  0.64671004]]
